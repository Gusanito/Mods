package grim3212.icemaker;

import java.util.logging.Level;

import net.minecraft.block.Block;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.src.ModLoader;
import net.minecraftforge.common.Configuration;
import cpw.mods.fml.common.FMLLog;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.Init;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.Mod.PreInit;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.network.NetworkMod;
import cpw.mods.fml.common.registry.GameRegistry;
import cpw.mods.fml.common.registry.LanguageRegistry;

@Mod(modid = "IceMaker", name = "Ice Maker", version = "1.0")
@NetworkMod(clientSideRequired = true, serverSideRequired = false)
public class IceMaker {
	@SidedProxy(clientSide = "grim3212.icemaker.common.ClientProxy", serverSide = "grim3212.icemaker.common.CommonProxy")
	public static grim3212.icemaker.common.CommonProxy proxy;
	@Instance("IceMaker")
	public static IceMaker instance;

	public static Item BowlWater;
	public static Block IceMaker;
	public static int iceMakerID;
	public int bowlWaterID;

	@PreInit
	public void preInit(FMLPreInitializationEvent event) {
		ModMetadata data = event.getModMetadata();
		data.autogenerated = false;
		data.version = "1.0";
		data.name = "Ice Maker";
		data.description = "Adds in a way to get ice without having to use silk touch or other methods.";
		data.authorList.add("Grim3212");
		data.authorList.add("Nandonalt");
		data.url = "http://grim3212.wikispaces.com/";
		data.credits = "Thanks to Nandonalt for the original mod.";
		data.logoFile = "/mods/logo.png";

		Configuration config = new Configuration(event.getSuggestedConfigurationFile());
		try {
			config.load();
			iceMakerID = config.get(Configuration.CATEGORY_BLOCK, "Ice Maker ID", 2728).getInt(2728);
			bowlWaterID = config.get(Configuration.CATEGORY_ITEM, "Water Bowl ID", 9123).getInt(9123);
		} catch (Exception e) {
			FMLLog.log(Level.SEVERE, e, "Ice Maker has had a problem loading it's configuration");
		} finally {
			config.save();
		}
	}

	@Init
	public void load(FMLInitializationEvent event) {
		proxy.registerRenderInformation();

		BowlWater = (new ItemBowlWater(bowlWaterID)).setUnlocalizedName("BowlWater").setCreativeTab(CreativeTabs.tabMaterials);
		IceMaker = (new BlockIceMaker(iceMakerID)).setHardness(1.0F).setStepSound(Block.soundStoneFootstep).setUnlocalizedName("Ice Maker").setCreativeTab(CreativeTabs.tabDecorations);

		GameRegistry.registerBlock(IceMaker);
		LanguageRegistry.addName(BowlWater, "Bowl of Water");
		LanguageRegistry.addName(IceMaker, "Ice Maker");
		GameRegistry.addRecipe(new ItemStack(IceMaker, 1), new Object[] { "X X", "I I", "XXX", Character.valueOf('X'), Block.blocksList[4], Character.valueOf('I'), Block.blocksList[80] });
		GameRegistry.addRecipe(new ItemStack(BowlWater, 1), new Object[] { "X", "M", Character.valueOf('X'), Item.itemsList[326], Character.valueOf('M'), Item.itemsList[281] });
	}
}
