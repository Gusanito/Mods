package grim3212.mysticpack;

import java.util.Random;
import java.util.logging.Level;

import net.minecraft.block.Block;
import net.minecraft.item.ItemStack;
import net.minecraft.world.World;
import net.minecraft.world.gen.feature.WorldGenMinable;
import net.minecraftforge.client.MinecraftForgeClient;
import net.minecraftforge.common.Configuration;
import cpw.mods.fml.common.FMLLog;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.Mod.Init;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.Mod.PreInit;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.network.NetworkMod;
import cpw.mods.fml.common.registry.GameRegistry;
import cpw.mods.fml.common.registry.LanguageRegistry;

@Mod(modid = "MysticStones", name = "Mystic Stones", version = "1.0")
@NetworkMod(clientSideRequired = true, serverSideRequired = false)
public class MysticStones {
	@SidedProxy(clientSide = "grim3212.mysticpack.common.ClientProxy", serverSide = "grim3212.mysticpack.common.CommonProxy")
	public static grim3212.mysticpack.common.CommonProxy proxy;
	@Instance("MysticStones")
	public static MysticStones instance;

	public static Block anorthosite;
	public static Block anorthositeSmooth;
	public static Block limestone;
	public static Block limestoneSmooth;
	public static Block migmatite;
	public static Block migmatiteSmooth;
	public static Block orthogneiss;
	public static Block orthogneissSmooth;
	public static Block marble;
	public static Block marbleSmooth;
	public static Block slate;
	public static Block slateSmooth;
	public static Block planksBlack;
	public static Block planksBlue;
	public static Block planksGreen;
	public static Block planksOrange;
	public static Block planksPurple;
	public static Block planksRed;
	
	public int anorthositeID;
	public int anorthositeSmoothID;
	public int limestoneID;
	public int limestoneSmoothID;
	public int migmatiteID;
	public int migmatiteSmoothID;
	public int orthogneissID;
	public int orthogneissSmoothID;
	public int marbleID;
	public int marbleSmoothID;
	public int slateID;
	public int slateSmoothID;
	public int planksBlackID;
	public int planksBlueID;
	public int planksRedID;
	public int planksGreenID;
	public int planksPurpleID;
	public int planksOrangeID;

	@PreInit
	public void preInit(FMLPreInitializationEvent event) {
		ModMetadata data = event.getModMetadata();
		data.autogenerated = false;
		data.version = "1.0";
		data.name = "Mystic Stones";
		data.description = "Adds new colored planks and also different types of stone that generate.";
		data.authorList.add("Grim3212");
		data.authorList.add("Axebane");
		data.url = "http://grim3212.wikispaces.com/";
		data.credits = "Thanks to Axebane for the original mod.";
		data.logoFile = "/mods/logo.png";
		
		Configuration config = new Configuration(event.getSuggestedConfigurationFile());
		try {
			config.load();
			anorthositeID = config.get(Configuration.CATEGORY_BLOCK, "Anorthosite ID", 2692).getInt(2692);
			anorthositeSmoothID = config.get(Configuration.CATEGORY_BLOCK, "Anorthosite Smooth ID", 2693).getInt(2693);
			limestoneID = config.get(Configuration.CATEGORY_BLOCK, "Limestone ID", 2694).getInt(2694);
			limestoneSmoothID = config.get(Configuration.CATEGORY_BLOCK, "Limestone Smooth ID", 2695).getInt(2695);
			migmatiteID = config.get(Configuration.CATEGORY_BLOCK, "Migmatite ID", 2696).getInt(2696);
			migmatiteSmoothID = config.get(Configuration.CATEGORY_BLOCK, "Migmatite Smooth ID", 2697).getInt(2697);
			orthogneissID = config.get(Configuration.CATEGORY_BLOCK, "Orthogneiss ID", 2698).getInt(2698);
			orthogneissSmoothID = config.get(Configuration.CATEGORY_BLOCK, "Orthogneiss Smooth ID", 2699).getInt(2699);
			marbleID = config.get(Configuration.CATEGORY_BLOCK, "Marble ID", 2700).getInt(2700);
			marbleSmoothID = config.get(Configuration.CATEGORY_BLOCK, "Marble Smooth ID", 2701).getInt(2701);
			slateID = config.get(Configuration.CATEGORY_BLOCK, "Slate ID", 2702).getInt(2702);
			slateSmoothID = config.get(Configuration.CATEGORY_BLOCK, "Slate Smooth ID", 2703).getInt(2703);
			planksBlackID = config.get(Configuration.CATEGORY_BLOCK, "Black Planks ID", 2704).getInt(2704);
			planksBlueID = config.get(Configuration.CATEGORY_BLOCK, "Blue Planks ID", 2705).getInt(2705);
			planksRedID = config.get(Configuration.CATEGORY_BLOCK, "Red Planks ID", 2706).getInt(2706);
			planksGreenID = config.get(Configuration.CATEGORY_BLOCK, "Green Planks ID", 2707).getInt(2707);
			planksPurpleID = config.get(Configuration.CATEGORY_BLOCK, "Purple Planks ID", 2708).getInt(2708);
			planksOrangeID = config.get(Configuration.CATEGORY_BLOCK, "Orange Planks ID", 2709).getInt(2709);
		} catch (Exception e) {
			FMLLog.log(Level.SEVERE, e, "Mystic Stones has had a problem loading it's configuration");
		} finally {
			config.save();
		}
	}
	
	
	@Init
	public void load(FMLInitializationEvent event) {
		proxy.registerRenderInformation();
		GameRegistry.registerWorldGenerator(new MysticStonesGenerator());
		
		anorthosite = (new BlockAnorthosite(anorthositeID, 18)).setHardness(0.1F).setResistance(5F).setUnlocalizedName("anorthosite").setCreativeTab(MysticOres.customTab);
		limestone = (new BlockLimestone(limestoneID, 16)).setHardness(0.2F).setResistance(5F).setUnlocalizedName("limestone").setCreativeTab(MysticOres.customTab);
		migmatite = (new BlockMigmatite(migmatiteID, 11)).setHardness(0.2F).setResistance(5F).setUnlocalizedName("migmatite").setCreativeTab(MysticOres.customTab);
		orthogneiss = (new BlockOrthogneiss(orthogneissID, 10)).setHardness(0.3F).setResistance(5F).setUnlocalizedName("orthogneiss").setCreativeTab(MysticOres.customTab);
		marble = (new BlockMarble(marbleID, 13)).setHardness(0.3F).setResistance(5F).setUnlocalizedName("marble").setCreativeTab(MysticOres.customTab);
		slate = (new BlockSlate(slateID, 1)).setHardness(0.1F).setResistance(5F).setUnlocalizedName("slate").setCreativeTab(MysticOres.customTab);
		anorthositeSmooth = (new BlockAnorthositeSmooth(anorthositeSmoothID, 0)).setHardness(0.1F).setResistance(5F).setUnlocalizedName("anorthositeSmooth").setCreativeTab(MysticOres.customTab);
		limestoneSmooth = (new BlockLimestoneSmooth(limestoneSmoothID, 15)).setHardness(0.2F).setResistance(5F).setUnlocalizedName("limestoneSmooth").setCreativeTab(MysticOres.customTab);
		migmatiteSmooth = (new BlockMigmatiteSmooth(migmatiteSmoothID, 7)).setHardness(0.2F).setResistance(5F).setUnlocalizedName("migmatiteSmooth").setCreativeTab(MysticOres.customTab);
		orthogneissSmooth = (new BlockOrthogneissSmooth(orthogneissSmoothID, 2)).setHardness(0.3F).setResistance(5F).setUnlocalizedName("orthogneissSmooth").setCreativeTab(MysticOres.customTab);
		marbleSmooth = (new BlockMarbleSmooth(marbleSmoothID, 12)).setHardness(0.3F).setResistance(5F).setUnlocalizedName("marbleSmooth").setCreativeTab(MysticOres.customTab);
		slateSmooth = (new BlockSlateSmooth(slateSmoothID, 17)).setHardness(0.1F).setResistance(5F).setUnlocalizedName("slateSmooth").setCreativeTab(MysticOres.customTab);
		planksBlack = (new BlockPlanksBlack(planksBlackID, 9)).setHardness(0.3F).setResistance(5F).setUnlocalizedName("planksBlack").setCreativeTab(MysticOres.customTab);
		planksBlue = (new BlockPlanksBlue(planksBlueID, 8)).setHardness(0.3F).setResistance(5F).setUnlocalizedName("planksBlue").setCreativeTab(MysticOres.customTab);
		planksGreen = (new BlockPlanksGreen(planksGreenID, 6)).setHardness(0.3F).setResistance(5F).setUnlocalizedName("planksGreen").setCreativeTab(MysticOres.customTab);
		planksOrange = (new BlockPlanksOrange(planksOrangeID, 5)).setHardness(0.3F).setResistance(5F).setUnlocalizedName("planksOrange").setCreativeTab(MysticOres.customTab);
		planksPurple = (new BlockPlanksPurple(planksPurpleID, 4)).setHardness(0.3F).setResistance(5F).setUnlocalizedName("planksPurple").setCreativeTab(MysticOres.customTab);
		planksRed = (new BlockPlanksRed(planksRedID, 3)).setHardness(0.3F).setResistance(5F).setUnlocalizedName("planksRed").setCreativeTab(MysticOres.customTab);

		GameRegistry.registerBlock(anorthosite);
		GameRegistry.registerBlock(anorthositeSmooth);
		GameRegistry.registerBlock(limestone);
		GameRegistry.registerBlock(limestoneSmooth);
		GameRegistry.registerBlock(migmatite);
		GameRegistry.registerBlock(migmatiteSmooth);
		GameRegistry.registerBlock(orthogneiss);
		GameRegistry.registerBlock(orthogneissSmooth);
		GameRegistry.registerBlock(marble);
		GameRegistry.registerBlock(marbleSmooth);
		GameRegistry.registerBlock(slate);
		GameRegistry.registerBlock(slateSmooth);
		GameRegistry.registerBlock(planksBlack);
		GameRegistry.registerBlock(planksBlue);
		GameRegistry.registerBlock(planksGreen);
		GameRegistry.registerBlock(planksOrange);
		GameRegistry.registerBlock(planksPurple);
		GameRegistry.registerBlock(planksRed);

		LanguageRegistry.addName(anorthosite, "Anorthosite");
		LanguageRegistry.addName(anorthositeSmooth, "Smooth Anorthosite");
		LanguageRegistry.addName(limestone, "Limestone");
		LanguageRegistry.addName(limestoneSmooth, "Smooth Limestone");
		LanguageRegistry.addName(migmatite, "Migmatite");
		LanguageRegistry.addName(migmatiteSmooth, "Smooth Migmatite");
		LanguageRegistry.addName(orthogneiss, "Orthogneiss");
		LanguageRegistry.addName(orthogneissSmooth, "Smooth Orthogneiss");
		LanguageRegistry.addName(marble, "Marble");
		LanguageRegistry.addName(marbleSmooth, "Smooth Marble");
		LanguageRegistry.addName(slate, "Slate");
		LanguageRegistry.addName(slateSmooth, "Smooth Slate");
		LanguageRegistry.addName(planksBlack, "Black Planks");
		LanguageRegistry.addName(planksBlue, "Blue Planks");
		LanguageRegistry.addName(planksGreen, "Green Planks");
		LanguageRegistry.addName(planksOrange, "Orange Planks");
		LanguageRegistry.addName(planksPurple, "Purple Planks");
		LanguageRegistry.addName(planksRed, "Red Planks");
		
		GameRegistry.addShapelessRecipe(new ItemStack(planksBlack, 2), new Object[] { Block.planks, marble });
		GameRegistry.addShapelessRecipe(new ItemStack(planksBlue, 2), new Object[] { Block.planks, slate });
		GameRegistry.addShapelessRecipe(new ItemStack(planksGreen, 2), new Object[] { Block.planks, limestone });
		GameRegistry.addShapelessRecipe(new ItemStack(planksOrange, 2), new Object[] { Block.planks, migmatite });
		GameRegistry.addShapelessRecipe(new ItemStack(planksPurple, 2), new Object[] { Block.planks, anorthosite });
		GameRegistry.addShapelessRecipe(new ItemStack(planksRed, 2), new Object[] { Block.planks, orthogneiss });
		GameRegistry.addShapelessRecipe(new ItemStack(planksBlack, 3), new Object[] { Block.planks, marbleSmooth });
		GameRegistry.addShapelessRecipe(new ItemStack(planksBlue, 3), new Object[] { Block.planks, slateSmooth });
		GameRegistry.addShapelessRecipe(new ItemStack(planksGreen, 3), new Object[] { Block.planks, limestoneSmooth });
		GameRegistry.addShapelessRecipe(new ItemStack(planksOrange, 3), new Object[] { Block.planks, migmatiteSmooth });
		GameRegistry.addShapelessRecipe(new ItemStack(planksPurple, 3), new Object[] { Block.planks, anorthositeSmooth });
		GameRegistry.addShapelessRecipe(new ItemStack(planksRed, 3), new Object[] { Block.planks, orthogneissSmooth });
		GameRegistry.addShapelessRecipe(new ItemStack(Block.planks, 1), new Object[] { planksBlack });
		GameRegistry.addShapelessRecipe(new ItemStack(Block.planks, 1), new Object[] { planksBlue });
		GameRegistry.addShapelessRecipe(new ItemStack(Block.planks, 1), new Object[] { planksGreen });
		GameRegistry.addShapelessRecipe(new ItemStack(Block.planks, 1), new Object[] { planksOrange });
		GameRegistry.addShapelessRecipe(new ItemStack(Block.planks, 1), new Object[] { planksPurple });
		GameRegistry.addShapelessRecipe(new ItemStack(Block.planks, 1), new Object[] { planksRed });
		
		GameRegistry.addSmelting(anorthosite.blockID, new ItemStack(anorthositeSmooth, 1), 0);
		GameRegistry.addSmelting(limestone.blockID, new ItemStack(limestoneSmooth, 1), 0);
		GameRegistry.addSmelting(migmatite.blockID, new ItemStack(migmatiteSmooth, 1), 0);
		GameRegistry.addSmelting(orthogneiss.blockID, new ItemStack(orthogneissSmooth, 1), 0);
		GameRegistry.addSmelting(marble.blockID, new ItemStack(marbleSmooth, 1), 0);
		GameRegistry.addSmelting(slate.blockID, new ItemStack(slateSmooth, 1), 0);
		GameRegistry.addSmelting(anorthositeSmooth.blockID, new ItemStack(Block.cobblestone, 1), 0);
		GameRegistry.addSmelting(limestoneSmooth.blockID, new ItemStack(Block.cobblestone, 1), 0);
		GameRegistry.addSmelting(migmatiteSmooth.blockID, new ItemStack(Block.cobblestone, 1), 0);
		GameRegistry.addSmelting(orthogneissSmooth.blockID, new ItemStack(Block.cobblestone, 1), 0);
		GameRegistry.addSmelting(marbleSmooth.blockID, new ItemStack(Block.cobblestone, 1), 0);
		GameRegistry.addSmelting(slateSmooth.blockID, new ItemStack(Block.cobblestone, 1), 0);
	}

}
